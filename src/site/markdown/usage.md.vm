#*
 * XML Format Maven Plugin (https://github.com/acegi/xml-format-maven-plugin)
 *
 * Copyright 2011-2025 Acegi Technology Pty Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
This plugin available from Maven Central. This means you can simply add it to
your ``pom.xml``, specifying your preferred format configuration. For example:

```
<plugin>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>xml-format</id>
        <goals>
          <goal>xml-format</goal>
        </goals>
      <configuration>
        <!-- configure your formatting preferences here (see link below) -->
        <indentSize>2</indentSize>
      </configuration>
    </execution>
  </executions>
</plugin>
```

The above will cause ``mvn package`` to format all your XML files automatically
during any `verify` phase. You can select a different phase by adding a
`<phase>someOther</phase>` to the `<execution>` element.

Please see the [xml-format:xml-format](xml-format-mojo.html) page for the
available configuration options.

You can also configure the plugin to just check formatting, without applying
any changes. It will just fail the build if any file doesn't respect the
conventions. This is mainly useful for CI, to make sure everyone has checked in
formatted files.

```
<plugin>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>xml-format</id>
      <goals>
        <goal>xml-check</goal>
      </goals>
    </execution>
  </executions>
  <configuration>
    <!-- configure your formatting preferences here (see link above) -->
    <indentSize>2</indentSize>
  </configuration>
</plugin>
```

Note that we defined the configuration globally for the plugin, outside of the
execution. This allows you to format the files manually from the command line:

```
mvn xml-format:xml-format
```
